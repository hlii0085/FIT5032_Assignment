@model IEnumerable<FIT5032_Assignment.Models.Hospital>

@{
    ViewBag.Title = "CustomerIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAKNQw83EpnMJdVClTbGKnIR3I0Uw9hJRw&callback=initMap&libraries=places&v=weekly" defer></script>
    <style>
        #map {
            height: 500px;
        }

        #floating-panel {
            position: absolute;
            top: 120px;
            left: 30%;
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
            text-align: center;
            font-family: "Roboto", "sans-serif";
            line-height: 30px;
            padding-left: 10px;
        }

        #right-panel {
            font-family: "Roboto", "sans-serif";
            line-height: 30px;
            padding-left: 10px;
            max-height: 500px;
        }

            #right-panel select,
            #right-panel input {
                font-size: 15px;
            }

            #right-panel select {
                width: 100%;
            }

            #right-panel i {
                font-size: 12px;
            }

        #right-panel {
            height: 100%;
            float: right;
            width: 390px;
            overflow: auto;
        }
    </style>
</head>

<body>
    <h2>Customer Index</h2>

    <div id="floating-panel">
        <label for="start"><b>Start: </b></label>
        <input id="start" type="text" placeholder="Please enter your location" />

        <label for="end"><b>End: </b></label>
        <select id="end">
            @foreach (var item in Model)
            {
                <option value="@item.Address">@item.HospitalName</option>
            }
        </select>
        <div>
            <label for="mode"><b>Mode of Travel: </b></label>
            <select id="mode">
                <option value="DRIVING">Driving</option>
                <option value="WALKING">Walking</option>
                <option value="BICYCLING">Bicycling</option>
                <option value="TRANSIT">Transit</option>
            </select>
        </div>
        <button id="get-direction">Search</button>
    </div>
    <div id="right-panel"></div>
    <div id="map"></div>

    <table class="table" id="datatable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.HospitalName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.HospitalName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @section scripts{
        <script>
            $(document).ready(function () {
                $("#datatable").dataTable();
            })
        </script>
    }
    <script>
        let map;

        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", "Hospitals/GetHospitals", false);
        xmlHttp.send();
        var hospitals = JSON.parse(xmlHttp.responseText);
        //console.log(hospitals);


        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 8,
            });

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        map.setCenter(pos);
                    },
                    function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                //browser doesnot support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }

            var geocoder = new google.maps.Geocoder();
            for (var i = 0; i < hospitals.length; i++) {
                geodoceAddress(geocoder, map, hospitals[i]);
            }

            //auto completion
            const input = document.getElementById("start");
            autoComplete(input, map);

            //get direction
            const directionsService = new google.maps.DirectionsService();
            const directionsRenderer = new google.maps.DirectionsRenderer();
            directionsRenderer.setPanel(document.getElementById("right-panel"));

            directionsRenderer.setMap(map);

            var getDirection = document.getElementById("get-direction");
            getDirection.addEventListener("click", function () {
                calculateAndDisplayRoute(directionsService, directionsRenderer);

            });


        }

        function autoComplete(input, map) {
            const autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.setTypes(["address"]);
            autocomplete.bindTo("bounds", map);
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
            infoWindow.open(map);
        }

        function geodoceAddress(geocoder, map, hospital) {

            var content = "<h3>" + hospital.HospitalName + "</h3><h4>" + hospital.Description + "</h4><h4>" + hospital.Address + "</h4>";
            var infowindow = new google.maps.InfoWindow({ content: content });
            console.log(content);

            geocoder.geocode({ address: hospital.Address }, function (results, status) {
                if (status == "OK") {
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });

                    marker.addListener("click", function () {
                        infowindow.open(map, marker);
                    })
                }
            })
        }



        function calculateAndDisplayRoute(directionsService, directionsRenderer) {
            var mode = document.getElementById("mode").value;
            directionsService.route(
                {
                    origin: {
                        query: document.getElementById("start").value,
                    },
                    destination: {
                        query: document.getElementById("end").value,
                    },
                    travelMode: google.maps.TravelMode[mode],
                },
                (response, status) => {
                    if (status === "OK") {
                        directionsRenderer.setDirections(response);
                    } else {
                        window.alert("Directions request failed due to " + status);
                    }
                }
            );
        }
    </script>
</body>





